proc nic_drv_opt {} {
	if {[have_board linux]} {
		return "ld=\"no\""
	}
	return ""
}

create_boot_directory
build { proxy/remote_rom/backend/nic_ip }
import_from_depot [depot_user]/src/[base_src] \
                  [depot_user]/pkg/[drivers_nic_pkg] \
                  [depot_user]/src/init \
                  [depot_user]/src/nic_bridge \
                  [depot_user]/src/dynamic_rom \
                  [depot_user]/src/rom_logger

install_config {
<config>
	<parent-provides>
		<service name="CAP"/>
		<service name="LOG"/>
		<service name="RM"/>
		<service name="SIGNAL"/>
		<service name="ROM" />
		<service name="RAM" />
		<service name="CPU" />
		<service name="PD" />
		<service name="IO_MEM" />
		<service name="IO_PORT" />
		<service name="IRQ" />
	</parent-provides>
	<default-route>
		<service name="Nic"> <child name="nic_bridge"/> </service>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<default caps="100" />

	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>

	<start name="drivers" caps="1000" managing_system="yes">
		<resource name="RAM" quantum="32M"/>
		<binary name="init"/>
		<route>
			<service name="ROM" label="config"> <parent label="drivers.config"/> </service>
			<service name="Timer"> <child name="timer"/> </service>
			<any-service> <parent/> </any-service>
		</route>
		<provides> <service name="Nic"/> </provides>
	</start>

	<start name="dynamic_rom">
		<resource name="RAM" quantum="4M"/>
		<provides><service name="ROM"/></provides>
		<config verbose="yes">
			<rom name="test">
				<sleep milliseconds="1000" />
				<inline description="disable">
					<test enabled="no"/>
				</inline>
				<sleep milliseconds="5000" />
				<inline description="enable">
					<test enabled="yes"/>
				</inline>
				<sleep milliseconds="10000" />
				<inline description="finished"/>
			</rom>
		</config>
	</start>

	<start name="remote_rom_server">
		<resource name="RAM" quantum="8M"/>
		<route>
			<service name="ROM" label_suffix="remote">
				<child name="dynamic_rom" label="test"/>
			</service>
			<service name="Nic"> <child name="nic_bridge"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
		<config>
			<remote_rom name="remote"
			            src="192.168.42.10" dst="192.168.42.11" />
		</config>
	</start>

	<start name="remote_rom_client">
		<resource name="RAM" quantum="8M"/>
		<provides><service name="ROM"/></provides>
		<config>
			<remote_rom name="remote" src="192.168.42.11" dst="192.168.42.10" />
		</config>
	</start>

	<start name="nic_bridge">
		<resource name="RAM" quantum="4M"/>
		<provides><service name="Nic"/></provides>
		<route>
			<service name="Nic"> <child name="drivers"/> </service>
			<any-service> <parent/> </any-service>
		</route>
		<config> <default-policy/> </config>
	</start>

	<start name="rom_logger">
		<resource name="RAM" quantum="4M"/>
		<config rom="remote" />
		<route>
			<service name="ROM" label_suffix="remote">
				<child name="remote_rom_client"/>
			</service>
			<any-service> <parent/> </any-service>
		</route>
	</start>
</config>}

build_boot_image { remote_rom_server remote_rom_client }

append qemu_args " -nographic "

run_genode_until {.*change \(finished\).*} 30

grep_output {<test enabled}
compare_output_to {
[init -> rom_logger]   <test enabled="no"/>
[init -> rom_logger]   <test enabled="yes"/>
}
